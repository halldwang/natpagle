(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{209:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),r("p",[t._v("到目前为止，我们已经看到了函数式编程的一小部分功能。")]),t._v(" "),r("p",[t._v("但是什么是函数式编程呢？是什么让这一种语言具有这种能力，而不是另一种？是什么让这一种编程风格具有功能，而不是另一种？在本章中，我们将首先回答这些问题，然后介绍函数式编程的核心概念：")]),t._v(" "),r("ul",[r("li",[t._v("使用函数和数组控制流")]),t._v(" "),r("li",[t._v("编写纯函数、匿名函数、递归函数等")]),t._v(" "),r("li",[t._v("像对象一样传递函数")]),t._v(" "),r("li",[t._v("使用map()、filter()和reduce()函数")])]),t._v(" "),r("h2",{attrs:{id:"函数式编程语言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程语言"}},[t._v("#")]),t._v(" 函数式编程语言")]),t._v(" "),r("p",[t._v("函数式编程是促进函数式编程范例的语言。冒着过度简化的风险，我们可以说，如果一种语言包括函数式编程所需的功能，那么它就是一种函数式语言。在大多数情况下，这是编程风格。")]),t._v(" "),r("h2",{attrs:{id:"是什么让语言发挥作用呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是什么让语言发挥作用呢"}},[t._v("#")]),t._v(" 是什么让语言发挥作用呢")]),t._v(" "),r("p",[t._v("功能编程不能在像C和Java语言中执行，因为这些语言不包含支持它的构造方法。它们是纯粹面向对象的非函数式语言。")])])}),[],!1,null,null,null);a.default=s.exports}}]);